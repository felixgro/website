import { NextPage } from 'next';
import Head from 'next/head';
import styles from '../styles/Home.module.css';
import { Repository, RepositoryLanguages } from '../types/github';
import GithubTicker from '../components/GithubTicker';

type HomeProps = {
	projects: Repository[];
};

const Home: NextPage<HomeProps> = ({ projects }) => {
	return (
		<div className={styles.container}>
			<Head>
				<title>Hello World!</title>
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>

			<main>
				<section id='intro'>
					<h1>Hello World!</h1>
					<p>Lorem ipsum dolor sit amet consectetur adipisicing elit.</p>
				</section>

				<section id='github-project'>
					<GithubTicker projects={projects} />
				</section>
			</main>
		</div>
	);
};

export default Home;

export async function getStaticProps () {
	const { GH_USER, GH_TOKEN } = process.env;

	const isValidRepository = (r: Repository): boolean => {
		return (
			!!r.description &&
			!r.private &&
			!r.fork &&
			!r.description.includes('[private]')
		);
	};

	const getLanguageStats = async (
		repo: Repository
	): Promise<RepositoryLanguages> => {
		const res = await fetch(`https://api.github.com/users/${GH_USER}/repos`, {
			headers: {
				Authorization: `token ${GH_TOKEN}`,
				'Content-Type': 'application/json'
			}
		});
		return await res.json();
	};

	const ghReposRaw = await fetch(
		`https://api.github.com/users/${GH_USER}/repos`,
		{
			headers: {
				Authorization: `token ${GH_TOKEN}`,
				'Content-Type': 'application/json'
			}
		}
	);

	const ghRepos: Repository[] = (await ghReposRaw.json()).filter(
		isValidRepository
	);

	// TODO: Add languages
	const langs = await getLanguageStats(ghRepos[0]);

	return {
		props: {
			projects: ghRepos
		}
	};
}
